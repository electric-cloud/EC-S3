// -*- Groovy -*-
// build.gradle
//
// Gradle build script for EC-S3 plugin.
//
// Copyright (c) 2015 Electric Cloud, Inc.
// All rights reserved


buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url 'https://nexus-internal.cloudbees.com/content/groups/mirror'
            credentials {
                username = System.getenv('NEXUS_USERNAME') ?: nexusUsername
                password = System.getenv('NEXUS_PASSWORD') ?: nexusPassword
            }
        }
    }
	dependencies {
        classpath group: 'com.electriccloud.plugins', name: 'flow-gradle-plugin', version: '2.4'
	}
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'https://nexus-internal.cloudbees.com/content/repositories/snapshots'
        credentials {
            username = System.getenv('NEXUS_USERNAME') ?: nexusUsername
            password = System.getenv('NEXUS_PASSWORD') ?: nexusPassword
        }
    }
    maven {
        url 'https://nexus-internal.cloudbees.com/service/local/staging/deploy/maven2'
        credentials {
            username = System.getenv('NEXUS_USERNAME') ?: nexusUsername
            password = System.getenv('NEXUS_PASSWORD') ?: nexusPassword
        }
    }
    maven {
        url 'https://nexus-internal.cloudbees.com/content/groups/mirror'
        credentials {
            username = System.getenv('NEXUS_USERNAME') ?: nexusUsername
            password = System.getenv('NEXUS_PASSWORD') ?: nexusPassword
        }
    }
}

configurations.all {
    resolutionStrategy {
        force group: 'com.electriccloud', name: 'ec-test', version: '10.1.0'
        force group: 'com.electriccloud', name: 'commander-client', version: '10.1.0'
        force group: 'com.electriccloud', name: 'commander-sdk', version: '6.1.2.1'
        force group: 'com.electriccloud', name: 'ec_internal', version: '6.1.2.1'
        force group: 'com.google.gwt', name: 'gwt-user', version: '2.5.0-ec3'
        force group: 'com.google.gwt', name: 'gwt-dev', version: '2.5.0-ec1'

        // force group: 'com.electriccloud', name: 'commander-client', version: '10.1.0'
        // force group: 'com.electriccloud', name: 'commander-sdk', version: '6.1.2.1'
        // force group: 'com.electriccloud', name: 'ec_internal', version: '6.1.2.1'
        // force group: 'com.google.gwt', name: 'gwt-user', version: '2.5.0-ec3'
        // force group: 'com.google.gwt', name: 'gwt-dev', version: '2.5.0-ec1'

        cacheChangingModulesFor 0, 'seconds'
    }
}

group = "com.electriccloud"
description = "Plugins : EC-S3"
version = "1.1.3"

apply plugin: 'flow-gradle-plugin'
apply plugin: 'license'

license {
    header = file ('shortHeader.txt')
    exclude "**/project.xml"
}

dependencies {
    testCompile 'junit:junit:[4,)'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'com.amazonaws:aws-java-sdk-s3:1.11.10'
}

test {
    Properties props = new Properties()

    def propFileName = "ecplugin.properties"

    def propertyFile = new File( propFileName )

    if( propertyFile.exists() ) {
        props.load(new FileInputStream(propFileName))
    }

    systemProperties['COMMANDER_SERVER'] = "$commanderServer"
    systemProperties['COMMANDER_USER'] = props.getProperty("COMMANDER_USER")
    systemProperties['COMMANDER_PASSWORD'] = props.getProperty("COMMANDER_PASSWORD")
    systemProperties['PLUGIN_VERSION'] = version
    //TODO: load properties for EC-S3


 testLogging {
     // Show that tests are run in the command-line output
     events 'started', 'passed'
     exceptionFormat = 'full'
 }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}